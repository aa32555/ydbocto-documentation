; Source query: SELECT * FROM names WHERE firstName = 'Zero' OR lastName = 'Cool'
; This expression will result in a conversion to DNF, then a UNION ALL of the result sets with a special bit of logic to prevent
; duplicate results for the same key
;; This is a generated file; do not modify.
octoPlan1(cursorId)
    ; This code is responsible for generating the cross reference if needed
    DO:'$DATA(^%ydboctoocto("xref_status","NAMES","LASTNAME")) ^%ydboctoXS5ZnAaoO2DCwaXqVDKUV93plan0(cursorId)
    ; New variables as needed
    NEW %ydboctoz,%ydboctoi0,%ydboctoi1,%ydboctoi2 KILL ^%ydboctocursor(cursorId,"keys",2,"","")
    ; Since we are looking for a specific last name, we FIX the to that last name, and iterate over the cross reference, allowing
    ; us to avoid iterating through all elements in the table. The IF condition here is attempting to verify that there is at least
    ; one value matching the supplied last name, which is needed to prevent incorrect results in some cases (namely, the case of
    ; of a NULL value)
    SET ^%ydboctocursor(cursorId,"keys",0,"NAMES","LASTNAME")="Burn" IF $DATA(^%ydboctoxref("NAMES","LASTNAME",^%ydboctocursor(cursorId,"keys",0,"NAMES","LASTNAME")))'=0 DO
    . ; We then iterate on the key from the names table; the key starts with a NULL value, and goes until it hits another NULL value
    . ; The $ORDER is used to move the key forward; this is a default generated by Octo, and some schemas have a much more
    . ; complicated mechanism.
    . SET ^%ydboctocursor(cursorId,"keys",0,"NAMES","ID")=""
    . FOR %ydboctoi1=1:1 SET ^%ydboctocursor(cursorId,"keys",0,"NAMES","ID")=$ORDER(^%ydboctoxref("NAMES","LASTNAME",^%ydboctocursor(cursorId,"keys",0,"NAMES","LASTNAME"),^%ydboctocursor(cursorId,"keys",0,"NAMES","ID"))) QUIT:(^%ydboctocursor(cursorId,"keys",0,"NAMES","ID")="")  DO
    . . ; This is where we confirm boolean expressions are still true, and that we haven't emitted a value for this set of keys
    . . ; before
    . . IF 1&((^%ydboctocursor(cursorId,"keys",0,"NAMES","LASTNAME")="Burn"))&($DATA(^%ydboctocursor(cursorId,"dupl",0,^%ydboctocursor(cursorId,"keys",0,"NAMES","ID")))=0) DO
    . . . ; Mark that we emitted a new row in the table count; used if the user specified a LIMIT
    . . . SET:1&$INCREMENT(^%ydboctocursor(cursorId,"keys",2,"","")) %ydboctoz=42
    . . . ; Fill out the resulting row
    . . . SET:1 ^%ydboctocursor(cursorId,"keys",2,"","",^%ydboctocursor(cursorId,"keys",2,"",""))=$GET(^%ydboctocursor(cursorId,"keys",2,"","",^%ydboctocursor(cursorId,"keys",2,"","")))_^%ydboctocursor(cursorId,"keys",0,"NAMES","ID")_"|"_$PIECE($GET(^names(^%ydboctocursor(cursorId,"keys",0,"NAMES","ID"))),"|",2)_"|"_^%ydboctocursor(cursorId,"keys",0,"NAMES","LASTNAME")
    . . . ; Note that we emitted a value for this series of keys
    . . . SET ^%ydboctocursor(cursorId,"dupl",0,^%ydboctocursor(cursorId,"keys",0,"NAMES","ID"))=1
    . . . ; The index is used to order the results; we emit the lastname, and increment the counter used for that particular last
    . . . ; name
    . . . SET:1 ^%ydboctocursor(cursorId,"index",^%ydboctocursor(cursorId,"keys",0,"NAMES","ID"),$PIECE($GET(^names(^%ydboctocursor(cursorId,"keys",0,"NAMES","ID"))),"|",2),^%ydboctocursor(cursorId,"keys",0,"NAMES","LASTNAME"),^%ydboctocursor(cursorId,"keys",2,"",""))="",tmpVar=$INCREMENT(^%ydboctocursor(cursorId,"index",^%ydboctocursor(cursorId,"keys",0,"NAMES","ID"),$PIECE($GET(^names(^%ydboctocursor(cursorId,"keys",0,"NAMES","ID"))),"|",2),^%ydboctocursor(cursorId,"keys",0,"NAMES","LASTNAME")))
    ; Go to the next plan
    DO octoPlan2(cursorId)
    QUIT

;; This is a generated file; do not modify.
octoPlan2(cursorId)
    DO:'$DATA(^%ydboctoocto("xref_status","NAMES","FIRSTNAME")) ^%ydboctoX1Fs4Meubax2F129ZHjKhn0octoPlan1(cursorId)
    NEW %ydboctoz,%ydboctoi0,%ydboctoi1
    SET ^%ydboctocursor(cursorId,"keys",0,"NAMES","FIRSTNAME")="Zero" IF $DATA(^%ydboctoxref("NAMES","FIRSTNAME",^%ydboctocursor(cursorId,"keys",0,"NAMES","FIRSTNAME")))'=0 DO
    . SET ^%ydboctocursor(cursorId,"keys",0,"NAMES","ID")=""
    . FOR %ydboctoi1=1:1 SET ^%ydboctocursor(cursorId,"keys",0,"NAMES","ID")=$ORDER(^%ydboctoxref("NAMES","FIRSTNAME",^%ydboctocursor(cursorId,"keys",0,"NAMES","FIRSTNAME"),^%ydboctocursor(cursorId,"keys",0,"NAMES","ID"))) QUIT:(^%ydboctocursor(cursorId,"keys",0,"NAMES","ID")="")  DO
    . . IF 1&((^%ydboctocursor(cursorId,"keys",0,"NAMES","FIRSTNAME")="Zero"))&($DATA(^%ydboctocursor(cursorId,"dupl",0,^%ydboctocursor(cursorId,"keys",0,"NAMES","ID")))=0) DO
    . . . SET:1&$INCREMENT(^%ydboctocursor(cursorId,"keys",2,"","")) %ydboctoz=42
    . . . SET:1 ^%ydboctocursor(cursorId,"keys",2,"","",^%ydboctocursor(cursorId,"keys",2,"",""))=$GET(^%ydboctocursor(cursorId,"keys",2,"","",^%ydboctocursor(cursorId,"keys",2,"","")))_^%ydboctocursor(cursorId,"keys",0,"NAMES","ID")_"|"_^%ydboctocursor(cursorId,"keys",0,"NAMES","FIRSTNAME")_"|"_$PIECE($GET(^names(^%ydboctocursor(cursorId,"keys",0,"NAMES","ID"))),"|",3)
    . . . SET ^%ydboctocursor(cursorId,"dupl",0,^%ydboctocursor(cursorId,"keys",0,"NAMES","ID"))=1
    . . . SET:1 ^%ydboctocursor(cursorId,"index",^%ydboctocursor(cursorId,"keys",0,"NAMES","ID"),^%ydboctocursor(cursorId,"keys",0,"NAMES","FIRSTNAME"),$PIECE($GET(^names(^%ydboctocursor(cursorId,"keys",0,"NAMES","ID"))),"|",3),^%ydboctocursor(cursorId,"keys",2,"",""))="",tmpVar=$INCREMENT(^%ydboctocursor(cursorId,"index",^%ydboctocursor(cursorId,"keys",0,"NAMES","ID"),^%ydboctocursor(cursorId,"keys",0,"NAMES","FIRSTNAME"),$PIECE($GET(^names(^%ydboctocursor(cursorId,"keys",0,"NAMES","ID"))),"|",3)))
    QUIT
